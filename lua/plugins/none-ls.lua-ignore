return {
  "nvimtools/none-ls.nvim",
  dependencies = {
    "nvimtools/none-ls-extras.nvim",
  },
  config = function()
    local null_ls = require("null-ls")
    local augroup = vim.api.nvim_create_augroup("LspFormatting", {})
    null_ls.setup({
      sources = {
        --        null_ls.builtins.formatting.goimports,
        --        null_ls.builtins.formatting.markdownlint,
        --        null_ls.builtins.formatting.prettierd,
        --        null_ls.builtins.formatting.prettierd,
        --        null_ls.builtins.formatting.shfmt,
        --        null_ls.builtins.formatting.stylua,
        --        require("none-ls.diagnostics.eslint_d")
        require("none-ls.diagnostics.eslint_d").with({
          filetypes = { "javascript", "typescript", "vue", "html", "css" },
          condition = function()
            return null_ls.utils.root_pattern(
              "eslint.config.js",
              ".eslintrc",
              ".eslintrc.js",
              ".eslintrc.cjs",
              ".eslintrc.yaml",
              ".eslintrc.yml",
              ".eslintrc.json",
              "package.json"
            )(vim.api.nvim_buf_get_name(0)) ~= nil
          end
        })
      },
    })
    -- vim.keymap.set("n", "<leader>gf", vim.lsp.buf.format, {})


    --	on_attach = function(client, bufnr)
    --	if client.supports_method("textDocument/formatting") then
    --	vim.api.nvim_clear_autocmds({ group = augroup, buffer = bufnr })
    --        vim.api.nvim_create_autocmd("BufWritePre", {
    --		group = augroup,
    --			buffer = bufnr,
    --				callback = function()
    --	vim.lsp.buf.format()
    --	end,
    --	})
    --	end
    --	end
  end,
}
